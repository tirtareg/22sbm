library(matlib)
R(A)
echelon(A)
echelon(A, reduced = F)
echelon(A, reduced = T, fractions = T)
echelon(A, reduced = T, verbose = T, fractions = T)
tb <- function(A, i, j){
A1 <- A
A1[i,] <- A[j,]
A1[j,] <- A[i,]
A <- A1
A
}
ob <- function(A,i,j,k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- fractions(A) }
A
}
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- fractions(A)}
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
library(MASS)
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
# B31(3)
A <- ob(A,3,1,3); A
# B2(1/8)
A <- kb(A,2,1/8); A
A <- ob(A,3,2,2); A
A <- ob(A,1,2,2); A
A <- kb(A,3,1/A[3,3]); A
A <- ob(A,2,3,-A[2,3]); A
A <- ob(A,1,3,-A[1,3]); A
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3)
echelon(A, reduced = T, verbose = T, fractions = T)
library(matlib)
A <- matrix(c(4,1,3,
1,1,1,
2,5,3), nrow = 3)
A
Ginv(A)
fractions(Ginv(A))
A %*% Ginv(A) %*% A
A %*% fractions(Ginv(A)) %*% A
A <- matrix(c(2,1,1,
-1,-3,2,
1,1,-1,
6,-2,3), nrow = 3)
A
tb <- function(A, i, j){
A1 <- A
A1[i,] <- A[j,]
A1[j,] <- A[i,]
A <- A1
A
}
ob <- function(A,i,j,k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- fractions(A) }
A
}
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- fractions(A)}
A
}
A
A <- tb(A,1,2); A
A <- ob(A,2,1,-2); A
# B31(-1)
A <- ob(A,3,1,-1) ;A
# B32(-1)
A <- ob(A,3,2,-1); A
A <- kb(A,2,1/5) ;A
A <- kb(A,3,-1); A
A <- kb(A,2,3,1/5); A
A <- matrix(c(2,1,1,
-1,-3,2,
1,1,-1,
6,-2,3), nrow = 3)
A
# B12
A <- tb(A,1,2); A
A <- ob(A,2,1,-2); A
# B31(-1)
A <- ob(A,3,1,-1) ;A
# B32(-1)
A <- ob(A,3,2,-1); A
A <- kb(A,2,1/5) ;A
A <- kb(A,3,-1); A
A <- kb(A,2,3,1/5); A
A <- ob(A,2,3,1/5); A
A <- ob(A,1,2,3); A
A <- ob(A1,3,-1); A
A <- ob(A,1,3,-1); A
echelon(A, reduced = T, verbose = T)
echelon(A, reduced = T, verbose = T, fractions = T)
A <- matrix(c(2,1,1,
-1,-3,2,
1,1,-1,
6,-2,3), nrow = 3)
echelon(A, reduced = T, verbose = T, fractions = T)
ob <- function(A,i,j,k){
if (MASS::is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- MASS::fractions(A) }
A
}
kb <- function(A, i, k){
if (is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- fractions(A)}
A
}
tb <- function(A, i, j){
A1 <- A
A1[i,] <- A[j,]
A1[j,] <- A[i,]
A <- A1
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
kb <- function(A, i, k){
if (MASS::is.fractions(A)==TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- MASS::fractions(A)}
A
}
A <- matrix(c(2,3,-3,
-4,2,4,
7,6,5,
1,5,0), nrow = 3); A
# B1(0.5)
A <- kb(A,1, 1/2); A
# B21(-3)
A <- ob(A,2,1,-3); A
# B31(3)
A <- ob(A,3,1,3); A
# B2(1/8)
A <- kb(A,2,1/8); A
A <- ob(A,3,2,2); A
A <- ob(A,1,2,2); A
A <- kb(A,3,1/A[3,3]); A
A <- ob(A,2,3,-A[2,3]); A
A <- ob(A,1,3,-A[1,3]); A
A <- matrix(sample(1:10, 25, replace = T), nrow = 5);A
A <- ob(A,2,1,-6);A
A <- ob(A,3,1,-3);A
A <- ob(A,4,1,-10);A
A <- ob(A,5,1,-6);A
A <- kb(A,2,-1/33);A
A <- ob(A,3,2,12);A
A <- ob(A,4,2,53);A
A <- ob(A,5,2,28);A
A <- kb(A,3,-11/48);A
A <- ob(A,4,3,427/33);A
A <- ob(A,5,3,17/33);A
A <- kb(A,4,49/983);A
A <- kb(A,4,48/49);A
A <- ob(A,5,4,59/48);A
A <- kb(A,5,-983/1313);A
A <- ob(A,4,5,89/2949);A
A <- ob(A,3,5,-23/48);A
A <- ob(A,2,5,1/11);A
A <- ob(A,1,5,-1);A
A <- ob(A,3,4,-23/16);A
A <- ob(A,2,4,-46/33);A
A <- ob(A,1,4,-8);A
A <- ob(A,2,3,-10/33);A
A <- ob(A,1,3,-3);A
A <- ob(A,1,2,-6);A
A <- matrix(c(4,1,3,
1,1,1,
2,5,3), nrow = 3, byrow = T)
A
echelon(A)  # matriks echelon baris tereduksi
library(matlib)
echelon(A)  # matriks echelon baris tereduksi
MASS::fractions(echelon(A))  # matriks echelon baris tereduksi
echelon(A, reduced = F) # matriks echelon baris
echelon(A, reduced = T, verbose = T, fractions = T) # matriks echelon baris tereduksi dan langkah2nya
det(A)
Solve(A)
solve(A)
Ginv(A)
A %*% Ginv(A) %*% A
x <- 2 : 15
x <- 2 : 15; x
y <- -9 : 8; y
y <- -8 : 8; y
z <- seq(1, 5); z
?seq
z <- seq(1, 5, by = 0.1); z
z <- seq(1, 2, by = 0.1); z
p <- c(3, 7, 8, 5); p
q <- rep(9, 6)
q <- rep(9, 6); q
expand.grid(jurusan = c("Komputer", "Fisika"),
asal_daerah = c("Bogor", "Bandung"),
usia = c(25, 26))
x <- 2 : 15; x
y <- -8 : 8; y
z <- seq(1, 2, by = 0.1); z
p <- c(3, 7, 8, 5); p
q <- rep(9, 6); q
expand.grid(jurusan = c("Komputer", "Fisika"),
asal_daerah = c("Bogor", "Bandung"),
usia = c(25, 26))
x <- 2 : 15; x
y <- -8 : 8; y
z <- seq(1, 2, by = 0.1); z
p <- c(3, 7, 8, 5); p
q <- rep(9, 6); q
expand.grid(jurusan = c("Komputer", "Fisika"),
asal_daerah = c("Bogor", "Bandung"),
usia = c(25, 26))
ls()
ls(pat="y")
you <- 1:10
ls(pat="y")
ls(pat="y^")
ls(pat="^y")
ls(pat="^o")
ls(pat="o")
ay <- 1:100
ls(pat="^y")
ls(pat="y")
ls(pat="y^")
expand.grid(a=1:5,)
expand.grid(a=1:5,
b=1:5,
c=1:5,
c=1:5)
expand.grid(a=c("B","S"),
b=c("B","S"),
c=c("B","S"),)
expand.grid(a=c("B","S"),
b=c("B","S"),
c=c("B","S"),
d=c("B","S"))
getwd()
seq(0, 1, length.out = 11)
seq(0, 1, length.out = 9)
library(matlib)
tb <- function(A, i, j){
A1 <- A
A1[i,] <- A[j,]
A1[j,] <- A[i,]
A <- A1
A
}
ob <- function(A,i,j,k){
if (MASS::is.fractions(A) == TRUE) {
A[i, ] <- A[i, ] + A[j, ] * k
} else {
A[i, ] <- A[i, ] + A[j, ] * k
A <- MASS::fractions(A) }
A
}
kb <- function(A, i, k){
if (MASS::is.fractions(A) == TRUE) {
A[i, ] <- A[i, ] * k
} else {
A[i, ] <- A[i, ] * k
A <- MASS::fractions(A)}
A
}
a <- matrix(c(2, 1, -5,
1, -2, 3,
2, -4, -1), 3, 3, byrow = T); a
a <- tb(a,1,2); a
a <- ob(a,2,1,-2); a
a <- ob(a,3,1,-2); a
a <- kb(a,2,1/5); a
a <- kb(a,3,-1/7); a
a <- ob(a,2,3,11/5);
a
a <- ob(a,1,3,-3); a
a <- ob(a,1,2,2); a
a <- matrix(c(2, 1, -5,
1, -2, 3,
2, -4, -1), 3, 3, byrow = T); a
echelon(a, reduced = T, verbose = T)
a <- matrix(c(2, 1, -5,
1, -2, 3,
2, -4, -1), 3, 3, byrow = T); a
a <- tb(a,1,2); a
a <- ob(a,2,1,-2); a
a <- ob(a,3,1,-2); a
library(matlib)
A <- matrix(c(1,0,0,1,
0,1,0,2,
0,0,0,4), ncol = 4, byrow = T)
A
R(A)
library(matlib)
a <- matrix(c(2, 1, -5,
1, -2, 3,
2, -4, -1), 3, 3, byrow = T); a
echelon(a, reduced = T, verbose = T)
a <- matrix(c(2, 1, -5, -4,
1, -2, 3, 4,
2, -4, -1, -6), 3, 4, byrow = T); a
echelon(a, reduced = T, verbose = T)
layout(matrix(1:4, 2, 2))
layout.show(4)
layout(matrix(c(1,1,1,2:4), 3, 2))
layout.show(6)
layout.show(4)
layout(matrix(c(1,1,2,3,3,4), 3, 2))
layout.show(4)
layout(matrix(c(1,1,2,3,4,4), 3, 2))
layout.show(4)
plot(1:100)
layout(c(1,1))
plot(1:100)
?layout
a <- matrix(sample(1:10, 16, replace = T), 4, 4)
a
det(a)-det(solve(a))
solve(a)
det(solve(a))
det(a)
a <- matrix(sample(1:10, 9, replace = T), 3, 3)
a
det(a)
det(solve(a))
expand.grid(jurusan = c("Komputer", "Fisika"),
asal_daerah = c("Bogor", "Bandung"),
usia = c(25, 26))
a <- expand.grid(jurusan = c("Komputer", "Fisika"),
asal_daerah = c("Bogor", "Bandung"),
usia = c(25, 26))
class(a)
str(a)
data <- read.csv("https://github.com/masdian/data_sources/raw/main/tesis_angga.csv")
data
names(data)
acak <- sample(1:50,30)
data <- data[acak,]
x22 <- data[, 19:30]
x23 <- data[, 31:37]
y1 <- data[, 38:46]
y2 <- data[, 47:56]
y3 <- data[, 57:66]
alpha(x21, check.keys = T)
library(psych)
alpha(x21, check.keys = T)
x21 <- data[, 7:18]
alpha(x21, check.keys = T)
Z <- matrix(c(7,1,8,3,
3,2,7,5,
4,5,1,7,
2,6,0,8), 4, 4, byrow = T)
Z
Z*Z
Z%*%Z
# 1a
Z%*%Z
# 1b
Z*Z
# 1c
solve(Z)
dev.list()
def<-matrix(c(1,1,1,2:4),3,2)
layout(def)
layout.show(4)
par(mfrow=c(1,1))
def <- matrix(c(2, 1, 1, 4, 3, 3),3,2)
layout(def)
layout.show(4)
def <- matrix(c(2, 1, 1, 4, 3, 3), 3, 2)
layout(def)
layout.show(4)
# or
layout(matrix(c(2, 1, 1, 4, 3, 3), 3, 2)))
# or
layout(matrix(c(2, 1, 1, 4, 3, 3), 3, 2))
layout.show(4)
# or
layout(matrix(c(2, 1, 1, 4, 3, 3), 3, 2))
layout.show(4)
# Diskusi 5
# Pertanyaan 1
layout(matrix(c(1, 2, 2, 3, 3, 4), 3, 2))
layout.show(4)
data <- data.frame(x = c(2,1,2,4,1,2,3,4,2,3,1),
y = c(4,3,4,4,3,4,5,4,4,5,3))
data
plot(x,y)
plot(data$x, data$y)
par(mfrow=c(1,1))
plot(data$x, data$y)
x = c(2,1,2,4,1,2,3,4,2,3,1)
y = c(4,3,4,4,3,4,5,4,4,5,3)
plot(x, y)
sunflowerplot(x, y)
def<-matrix(c(1,1,1,2:4),3,2)
B <- matrix(1:20, 5)
B
B <- matrix(1:20, 5)
B
# Nama: Riana Hadiana
# Nama  : Riana Hadiana
# NIM   : 1234567890
# Jawaban No 1
A <- matrix(c(1,2,3,4,
5,5,2,1,
3,2,3,4), nrow = 4, byrow = T)
A <- matrix(c(2,3,1,5,
2,4,1,6,
3,2,3,3), nrow = 3, byrow = T)
A
A <- matrix(c(2,3,1,5,
2,4,1,6,
3,2,3,3), nrow = 3, byrow = T)
A
A*A
A%*%t(A)
A <- matrix(c(2,3,1,5,
2,4,1,6,
3,2,3,3), nrow = 3, byrow = T)
A
A*A
A%*%t(A)
A <- matrix(c(1,2,3,
4,5,6), nrow = 2, byrow = T)
b <- c(7,8,9)
N1 <- rbind(A, b)
N1
class(N1)
N1 <- rbind(A, c(b))
N1
class(N1)
N1 <- rbind(A, b)
N1
class(N1)
N1[3,3]
str(N1)
N1 <- rbind(A, c(b))
N1
class(N1)
str(N1)
library(matlib)
A <- matrix(c(1,2,1,0,
2,-1,-1,1,
-3,-4,-1,2),3,4,T)
A
echelon(A)
update.packages(ask = F, checkBuilt = T)
library(rlang)
install.packages("rlang")
q()
setwd("G:/My Drive/#PMB/2022/02_SBMPTN/22sbm")
lowbwt <- read.csv("http://bagusco.staff.ipb.ac.id/files/2020/02/lowbwt.csv")
lowbwt
myopia <- read.csv("http://bagusco.staff.ipb.ac.id/files/2020/02/myopia.csv")
jawa_tengah <- read.csv("http://bagusco.staff.ipb.ac.id/files/2020/02/jawa-tengah.csv")
harga_rumah <- read.delim("http://bagusco.staff.ipb.ac.id/files/2020/02/harga-rumah.txt")
pdrb <- read.csv("http://bagusco.staff.ipb.ac.id/files/2020/02/PDRB-LAP-USAHA.csv")
psikografis <- read.csv("http://bagusco.staff.ipb.ac.id/files/2020/02/psikografis.csv")
resikomiopi <- read.csv("http://bagusco.staff.ipb.ac.id/files/2020/02/resikomiopi.csv")
path_to_python <- "~/anaconda3/bin/python"
use_python(path_to_python)
library(reticulate)
use_python(path_to_python)
dim(iris)
train <- sample(1:150, 0.8*150)
latih <- iris[train,]
test <- iris[setdiff(1:150, train), ]
names(iris)
library(discretization)
a <- c(-Inf, mdlp(latih[, c(1, 5)])$cutp[[1]], Inf)
cut(a, test[,1])
